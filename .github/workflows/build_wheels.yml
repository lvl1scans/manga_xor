# .github/workflows/build_wheels.yml
name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Define the different operating systems and CPU architectures to build for
        os: [ubuntu-latest, windows-latest, macos-latest]
        target: [x86_64]
        include:
          # Add a special case for Apple Silicon (aarch64) on macOS
          - os: macos-latest
            target: aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # You can specify other versions

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          # Use the target architecture from the matrix
          target: ${{ matrix.target }}
          # Build wheels for a wide range of Linux systems (manylinux)
          args: --release --out dist --find-interpreter
          # For Linux, build against the manylinux2014 standard for broad compatibility
          manylinux: auto

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist